"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/login";
exports.ids = ["pages/api/auth/login"];
exports.modules = {

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("bcryptjs");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./pages/api/auth/login.ts":
/*!*********************************!*\
  !*** ./pages/api/auth/login.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([bcryptjs__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_2__]);\n([bcryptjs__WEBPACK_IMPORTED_MODULE_0__, zod__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// pages/api/auth/login.ts\n\n\n\n// Валидация входящих данных\nconst loginSchema = zod__WEBPACK_IMPORTED_MODULE_2__.z.object({\n    username: zod__WEBPACK_IMPORTED_MODULE_2__.z.string().min(1, \"Username is required\"),\n    password: zod__WEBPACK_IMPORTED_MODULE_2__.z.string().min(1, \"Password is required\")\n});\n// Импортируем функции для работы с пользователями\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst getUsersFilePath = ()=>path.join(process.cwd(), \"data\", \"users.json\");\nconst loadUsers = ()=>{\n    const filePath = getUsersFilePath();\n    if (!fs.existsSync(filePath)) {\n        return [];\n    }\n    try {\n        const data = fs.readFileSync(filePath, \"utf8\");\n        return JSON.parse(data);\n    } catch (error) {\n        console.error(\"Error loading users:\", error);\n        return [];\n    }\n};\n// Генерация JWT токена\nconst generateToken = (userId)=>{\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n        userId\n    }, process.env.JWT_SECRET || \"your-secret-key-change-in-production\", {\n        expiresIn: \"7d\"\n    });\n};\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        // Валидация входящих данных\n        const validation = loginSchema.safeParse(req.body);\n        if (!validation.success) {\n            return res.status(400).json({\n                error: \"Validation failed\",\n                details: validation.error.errors\n            });\n        }\n        const { username, password } = validation.data;\n        // Загружаем пользователей\n        const users = loadUsers();\n        // Ищем пользователя по username или email\n        const user = users.find((u)=>u.username.toLowerCase() === username.toLowerCase() || u.email.toLowerCase() === username.toLowerCase());\n        if (!user) {\n            return res.status(401).json({\n                error: \"Invalid credentials\",\n                message: \"Username or password is incorrect\"\n            });\n        }\n        // Проверяем пароль\n        const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, user.password);\n        if (!isPasswordValid) {\n            return res.status(401).json({\n                error: \"Invalid credentials\",\n                message: \"Username or password is incorrect\"\n            });\n        }\n        // Генерируем токен\n        const token = generateToken(user.id);\n        // Обновляем последний вход (опционально)\n        user.lastLoginAt = new Date().toISOString();\n        // Сохраняем обновление (если нужно отслеживать последний вход)\n        const userIndex = users.findIndex((u)=>u.id === user.id);\n        if (userIndex !== -1) {\n            users[userIndex] = user;\n            try {\n                fs.writeFileSync(getUsersFilePath(), JSON.stringify(users, null, 2));\n            } catch (error) {\n                console.error(\"Error updating last login:\", error);\n            // Не критично, продолжаем\n            }\n        }\n        // Возвращаем данные пользователя (без пароля)\n        const userResponse = {\n            id: user.id,\n            username: user.username,\n            email: user.email,\n            walletAddress: user.walletAddress,\n            createdAt: user.createdAt,\n            lastLoginAt: user.lastLoginAt,\n            isEmailVerified: user.isEmailVerified,\n            profile: user.profile\n        };\n        res.status(200).json({\n            success: true,\n            message: \"Login successful\",\n            user: userResponse,\n            token\n        });\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        res.status(500).json({\n            error: \"Internal server error\",\n            message: \"Login failed\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/login.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/login.ts"));
module.exports = __webpack_exports__;

})();