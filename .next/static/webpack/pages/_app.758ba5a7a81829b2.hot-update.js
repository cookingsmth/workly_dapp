"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./hooks/useAuth.ts":
/*!**************************!*\
  !*** ./hooks/useAuth.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// hooks/useAuth.ts\n\nconst useAuth = ()=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const loadUser = async ()=>{\n            try {\n                const token = localStorage.getItem(\"token\");\n                if (!token) {\n                    setIsLoading(false);\n                    return;\n                }\n                const response = await fetch(\"/api/auth/me\", {\n                    headers: {\n                        \"Authorization\": \"Bearer \".concat(token)\n                    }\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    setUser(data.user);\n                } else {\n                    localStorage.removeItem(\"token\");\n                }\n            } catch (error) {\n                console.error(\"Error loading user:\", error);\n                localStorage.removeItem(\"token\");\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        loadUser();\n    }, []);\n    const login = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (username, password)=>{\n        setError(null);\n        setIsLoading(true);\n        try {\n            const response = await fetch(\"/api/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username,\n                    password\n                })\n            });\n            const data = await response.json();\n            if (response.ok) {\n                localStorage.setItem(\"token\", data.token);\n                setUser(data.user);\n                setError(null);\n                return {\n                    success: true,\n                    user: data.user\n                };\n            } else {\n                const error = {\n                    message: data.message || data.error || \"Login failed\",\n                    field: data.field || \"general\"\n                };\n                setError(error);\n                return {\n                    success: false,\n                    error\n                };\n            }\n        } catch (err) {\n            const error = {\n                message: \"Network error. Please check your connection.\",\n                field: \"general\"\n            };\n            setError(error);\n            return {\n                success: false,\n                error\n            };\n        } finally{\n            setIsLoading(false);\n        }\n    }, []);\n    const register = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (username, password, email)=>{\n        setError(null);\n        setIsLoading(true);\n        try {\n            const response = await fetch(\"/api/auth/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    email\n                })\n            });\n            const data = await response.json();\n            if (response.ok) {\n                localStorage.setItem(\"token\", data.token);\n                setUser(data.user);\n                setError(null);\n                return {\n                    success: true,\n                    user: data.user\n                };\n            } else {\n                let error;\n                if (data.details && Array.isArray(data.details)) {\n                    const firstError = data.details[0];\n                    error = {\n                        message: firstError.message,\n                        field: firstError.path[0]\n                    };\n                } else {\n                    error = {\n                        message: data.error || \"Registration failed\",\n                        field: data.field || \"general\"\n                    };\n                }\n                setError(error);\n                return {\n                    success: false,\n                    error\n                };\n            }\n        } catch (err) {\n            const error = {\n                message: \"Network error. Please check your connection.\",\n                field: \"general\"\n            };\n            setError(error);\n            return {\n                success: false,\n                error\n            };\n        } finally{\n            setIsLoading(false);\n        }\n    }, []);\n    const updateProfile = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (updates)=>{\n        if (!user) {\n            return {\n                success: false,\n                error: {\n                    message: \"Not authenticated\"\n                }\n            };\n        }\n        setError(null);\n        try {\n            const token = localStorage.getItem(\"token\");\n            const response = await fetch(\"/api/auth/profile\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(token)\n                },\n                body: JSON.stringify(updates)\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setUser(data.user);\n                return {\n                    success: true,\n                    user: data.user\n                };\n            } else {\n                const error = {\n                    message: data.error || \"Failed to update profile\",\n                    field: \"general\"\n                };\n                setError(error);\n                return {\n                    success: false,\n                    error\n                };\n            }\n        } catch (err) {\n            const error = {\n                message: \"Network error. Please try again.\",\n                field: \"general\"\n            };\n            setError(error);\n            return {\n                success: false,\n                error\n            };\n        }\n    }, [\n        user\n    ]);\n    const logout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (token) {\n                fetch(\"/api/auth/logout\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Authorization\": \"Bearer \".concat(token)\n                    }\n                }).catch(()=>{});\n            }\n        } finally{\n            localStorage.removeItem(\"token\");\n            setUser(null);\n            setError(null);\n        }\n    }, []);\n    const clearError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setError(null);\n    }, []);\n    const refreshAuth = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        const token = localStorage.getItem(\"token\");\n        if (!token) return false;\n        try {\n            const response = await fetch(\"/api/auth/me\", {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token)\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                setUser(data.user);\n                return true;\n            } else {\n                localStorage.removeItem(\"token\");\n                setUser(null);\n                return false;\n            }\n        } catch (error) {\n            localStorage.removeItem(\"token\");\n            setUser(null);\n            return false;\n        }\n    }, []);\n    return {\n        user,\n        isLoading,\n        error,\n        isAuthenticated: !!user,\n        login,\n        register,\n        logout,\n        updateProfile,\n        clearError,\n        refreshAuth\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useAuth.ts\n"));

/***/ })

});